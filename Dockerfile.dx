# This means that all commands after this are issued against a base
# Ruby image from Docker Hub, tagged with 3.2
FROM ruby:3.2

# Prevents apt-get from asking interactive questions
ENV DEBIAN_FRONTEND noninteractive

# Installs NodeJS based on instructions from 
# https://github.com/nodesource/distributions#debian-versions
RUN apt-get update -yq && \
    apt-get install -y ca-certificates curl gnupg && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | \
       gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | \
       tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update -yq && \
    apt-get install nodejs -yq  && \
    npm install -g yarn

# The command lsb_released is required to install Postgres, so we must install it here
RUN apt-get update -qy && apt-get install -qy lsb-release wget

# This installs the Postgres client, which is needed to install the pg gem.  This is based
# on instructions found here: https://www.postgresql.org/download/linux/ubuntu/
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update -qy && \
    apt-get -y install postgresql-client-15

# This installs Chromium and chromium-driver, used for Rails system tests.
# This doesn't use Chrome because Chrome is not available for all
# processor architectures.
RUN apt-get -y install chromium chromium-driver

# This sets up Ruby and installs Rails by updating RubyGems,
# ensuring bundler is installed, the installing Rails.
RUN echo "gem: --no-document" >> ~/.gemrc && \
    gem update --system && \
    gem install bundler && \
    gem install rails --version ">= 7.1.0"

# These are quality-of-life installs and can be omitted
RUN apt-get update -q && \
    apt-get install -qy rsync \
                        vim && \
    echo "set -o vi" >> ~/.bashrc

# This ensures that Rails' server binds to 0.0.0.0 when it
# starts, which allows our computer to see the running Rails app from
# inside the Docker container running the image this Dockerfile builds.
ENV BINDING="0.0.0.0"

# This entrypoint produces a nice help message and waits around for you to do
# something with the container.
COPY dx/show-help-in-app-container-then-wait.sh /root

